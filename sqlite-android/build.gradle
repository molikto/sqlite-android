plugins {
    id 'de.undercouch.download' version '2.1.0'
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'de.undercouch.download'

import de.undercouch.gradle.tasks.download.Download

group = 'io.requery'
version = '3.12.0'
description = 'Android SQLite compatibility library'

//gradle.projectsEvaluated {
//    preBuild.dependsOn(buildSqlite)
//}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName project.version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    // ndk gradle support is still very bad so it's built the regular ndk-build
    sourceSets.main.jni.srcDirs = ['src/main/none']
}

dependencies {
    compile 'com.android.support:support-v4:23.3.0'
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test:rules:0.4'
}

ext {
    sqliteDistributionUrl = 'http://www.sqlite.org/2016/sqlite-amalgamation-3120000.zip'
    pomXml = {
        resolveStrategy = Closure.DELEGATE_FIRST
        name project.name
        description project.description
        url 'https://github.com/requery/sqlite-android'
        scm {
            url 'https://github.com/requery/sqlite-android.git'
            connection 'scm:git:git://github.com/requery/sqlite-android.git'
            developerConnection 'scm:git:git@github.com/requery/sqlite-android.git'
        }
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/license/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
        developers {
            developer {
                id 'npurushe'
                name 'Nikhil Purushe'
            }
        }
    }
}

android.libraryVariants

Properties properties = new Properties()
File localProperties = project.rootProject.file('local.properties')
if (localProperties.exists()) {
    properties.load(localProperties.newDataInputStream())
}

task downloadSqlite(type: Download) {
    src project.sqliteDistributionUrl
    dest 'src/main/jni/sqlite.zip'
}

task installSqlite(dependsOn: downloadSqlite, type: Copy) {
    from zipTree(downloadSqlite.dest).matching {
        include '*/sqlite3.*'
        eachFile { it.setPath(it.getName()) }
    }
    into 'src/main/jni/sqlite'
}

//def ndkDir = System.getenv('ANDROID_NDK_HOME') ?: properties.getProperty('ndk.dir')

task buildSqlite(dependsOn: installSqlite, type: Exec) {
    workingDir 'src/main/jni'
    commandLine 'ndk-build'
}
